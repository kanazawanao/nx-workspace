npm run -- nx run tripig:serve -o
npm run -- nx run client:serve -o
npm run -- nx run client-manager:serve -o
npm run -- nx run api:serve

npm run -- nx run tripig:build
npm run -- nx run client:build
npm run -- nx run client-manager:build
npm run -- nx run api:build

npm run -- nx run tripig:test
npm run -- nx run client:test
npm run -- nx run client-manager:test
npm run -- nx run api:test

npm run -- nx run tripig:lint
npm run -- nx run client:lint
npm run -- nx run client-manager:lint
npm run -- nx run api:lint

npm run -- nx run tripig:e2e
npm run -- nx run client:e2e
npm run -- nx run client-manager:e2e
npm run -- nx run api:e2e

npm run -- nx run tripig:storybook
npm run -- nx run client:storybook
npm run -- nx run client-manager:storybook

npm run -- nx generate @nrwl/angular:library --name=top --directory=tripig --no-interactive
npm run -- nx generate @schematics/angular:module --name=top --project=tripig-top --routing --no-interactive
npm run -- nx generate @schematics/angular:component --name=top --project=tripig-top --style=scss --no-interactive

npm run -- nx dep-graph

npm run -- nx migrate @angular/material
npm install --legacy-peer-deps
npm run -- nx migrate --run-migrations

npm run -- nx g @nrwl/angular:move --project client-manager-login client-manager/top/login

mysql -h 127.0.0.1 -P 13306 -u develop -p

docker build -t client-multistage-image -f dockerfile/client/Dockerfile .
docker run --name client-multistage-container -d -p 8080:80 client-multistage-image

docker build -t client-manager-multistage-image -f dockerfile/client-manager/Dockerfile .
docker run --name client-manager-multistage-container -d -p 8888:80 client-manager-multistage-image

docker build -t api-multistage-image -f dockerfile/api/Dockerfile .
docker run --name api-multistage-container -d -p 3333:3333 api-multistage-image